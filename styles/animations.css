/* Опишите в этом файле все keyframes для проекта и стили анимаций иконки Like.

Будьте внимательны! Для корректной работы скриптов на этом сайте нужно, чтобы в HTML некоторые классы были названы особым образом:
✦ theme-dark — класс тёмной темы
✦ theme-light — класс светлой темы
✦ like-icon — для svg-иконки анимированного сердца
✦ card__like-button — для кнопки Like рядом с иконкой
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ is-liked — для обозначения состояния лайкнутой иконки в виде сердца
✦ button__text — для обозначения текстового элемента внутри кнопки

Кроме этого, не меняйте HTML переключателя тем. Его разметка также гарантирует работу своего скрипта.
*/
@keyframes cursor-translation {
  0% {
    transform: translateX(0);
  }

  100% {
    transform: translateX(4px);
  }
}
@keyframes heart-scaling {
  0% {
    scale: 1;
  }

  100% {
    scale: 1.5;
  }
}
@keyframes sparks {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}
@keyframes move {
  from {
    transform: translateX(-100%);
  }

  to {
    transform: translateX(0);
  }
}
@keyframes move-backword {
  from {
    transform: translateX(0);
  }

  to {
    transform: translateX(-100%);
  }
}
.card__icon-button {
  transition: outline 0.3s ease;
}
.like-icon .heart {
  transform-origin: center center;
}
.like-icon .contour {
  fill: currentColor;
  transition: fill linear 0.1s;
}
.like-icon .sparks {
  fill: var(--liked-color);
  opacity: 0;
}
.like-icon:hover .main-body {
  fill: currentColor;
  transition: fill linear 0.3s 0.05s;
}
.like-icon .core {
  fill: none;
  transition: fill linear 0.3s 0.03s;
}
.like-icon:hover .core {
  fill: currentColor;
  transition: fill linear 0.3s;
}
.like-icon:active .main-body {
  fill: var(--liked-color);
  transition: fill linear 0.3s 0.05s;
}
.like-icon:active .core {
  fill: var(--liked-color);
  transition: fill linear 0.3s;
}
.like-icon.is-liked .core {
  fill: var(--liked-color);
  transition: fill linear 0.3s;
}
.like-icon.is-liked .main-body {
  fill: var(--liked-color);
  transition: fill linear 0.3s 0.05s;
}
.like-icon.is-liked .contour {
  fill: var(--liked-color);
  transition: fill linear 0.3s 0.06s;
}
.like-icon.is-liked .heart {
  animation: heart-scaling ease-in 0.3s 0.1s alternate;
  animation-iteration-count: 1;
}
.like-icon.is-liked .sparks {
  animation: sparks ease-in 0.3s 0.3s alternate;
  animation-iteration-count: 1;
}
.button__decor {
  transition: box-shadow 0.3s ease;
}
.button__decor::before {
  content: "";
  background-color: var(--mode-color);
  position: absolute;
  inset: -2px 0;
  transform: translateX(-100%);
  animation: move-backword 0.5s ease-in-out forwards;
  mix-blend-mode: difference;
}
.button__decor:hover::before {
  animation: move 0.5s ease-in-out forwards;
}
.theme-menu__button:hover {
  outline: none;
  opacity: .6;
}
.theme-menu__button {
  transition: opacity 0.3s ease;
}
.theme-menu__button:hover,
.theme-menu__button:focus-visible {
  opacity: 0.6;
  cursor: pointer;
  outline: none;
  /* transition: opacity 0.3s ease; */
}
.theme-menu__button:disabled {
  pointer-events: none;
  opacity: 0.6;
  margin-inline-start: 0;

}
.theme-menu__button::after {
  content: "";
  position: absolute;
  display: block;
  inline-size: 100%;
  block-size: 3px;
  width: 0%;
  height: 2px;
  background-color: var(--Themes-mainColor);
  inset-block-end: -3px;
  opacity: 0.6;
  transform-origin: 0%;
  transform: scaleX(0);
  transition: transform .3s;
}
.theme-menu__item button:focus-visible::after {
  outline: none;
  width: 100%;
  opacity: 0.6;
}
button {
  transition: width 0.3s ease, opacity 0.3s ease;
}
button:focus-visible::after {
  /* transition: width 0.3s ease, opacity 0.3s ease; */
}
.theme-menu__button:disabled::before {
  content: "▶️";
  inline-size: 14px;
  block-size: 14px;
  margin-inline-end: 5px;
  animation: arrow-animation .5s ease-in-out alternate infinite;
}
.theme-menu__button:focus {
  outline: none;
}
.theme-menu__button:focus-visible {
  opacity: 0.6;
}
.theme-menu__button:focus-visible::after {
  transform: scaleX(1);
}

